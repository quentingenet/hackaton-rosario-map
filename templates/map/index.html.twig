<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 128 128%22><text y=%221.2em%22 font-size=%2296%22>⚫️</text><text y=%221.3em%22 x=%220.2em%22 font-size=%2276%22 fill=%22%23fff%22>sf</text></svg>">
        {% block stylesheets %}
            {{ encore_entry_link_tags('app') }}
            <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
            <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster/dist/MarkerCluster.css" />
            <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster/dist/MarkerCluster.Default.css" />
        {% endblock %}
        
        {% block javascripts %}
            {{ encore_entry_script_tags('app') }}
            <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
            <script src="https://unpkg.com/leaflet.markercluster/dist/leaflet.markercluster.js"></script>
            {% block importmap %}{{ importmap('app') }}{% endblock %}
        {% endblock %}
    </head>
    <body>
{% block body %}
<div id="map" style="height: 100vh;"></div>
<style>
    .leaflet-popup-content {
        text-align: center;
    }
    .popup-header {
        font-size: 1rem;
        font-weight: bold;
    }
    .popup-content {
        font-size: 0.9rem;
    }
    .participants-count {
        font-size: 1rem;
    }
</style>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const map = L.map('map').setView([46.232193, 2.209667], 6);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
        }).addTo(map);

        const markers = L.markerClusterGroup({
            polygonOptions: {
            fillColor: '#FFF4D5',
            color: '#FFA01C',
            weight: 0.5,
            opacity: 1,
            fillOpacity: 0.5
            },
            iconCreateFunction: function(cluster) {
            const markers = cluster.getAllChildMarkers();
            let totalParticipants = 0;
            markers.forEach(marker => {
                totalParticipants += marker.options.participantCount;
            });

                return L.divIcon({
                    html: `
                        <div style="position: relative; display: inline-block; width: 30px; height: 30px;">
                            <img src="/img/logo-rosario.png" alt="Logo" style="width: 100%; height: 100%;">
                            <span style="
                                position: absolute;
                                top: 5%;
                                right: 0;
                                color: black;
                                font-weight: bold;
                                background: rgba(255, 255, 255, 0.5);
                                border-radius: 12px;
                                padding: 2px 6px;
                                font-size: 10px;
                                line-height: 12px;
                                text-align: center;
                                transform: translate(50%, -50%);
                            ">
                                ${totalParticipants}
                            </span>
                        </div>
                    `,
                    className: 'marker-cluster',
                    iconSize: L.point(40, 40)
                });
            }
        });

        const points = {{ points|json_encode|raw }};
        points.forEach(point => {
            const customMarkerIcon = L.divIcon({
                html: `
                    <div style="position: relative; display: inline-block; width: 30px; height: 30px;">
                        <img src="/img/logo-rosario.png" alt="Logo" style="width: 100%; height: 100%;">
                        <span style="
                            position: absolute;
                            top: 5%;
                            right: 0;
                            color: black;
                            font-weight: bold;
                            background: rgba(255, 255, 255, 0.5);
                            border-radius: 12px;
                            padding: 2px 6px;
                            font-size: 10px;
                            line-height: 12px;
                            text-align: center;
                            transform: translate(50%, -50%);
                        ">
                            ${point.activeParticipantsCount}
                        </span>
                    </div>
                `,
                className: 'custom-marker-icon',
                iconSize: L.point(30, 30)
            });

            const popupContent = `
                <div class="popup-header">${point.parish.name}</div>
                <div class="popup-content">
                    ${point.parish.diocese.name}<br>
                    <span class="participants-count">Participants : ${point.activeParticipantsCount}</span>
                </div>
            `;
            const marker = L.marker([point.parish.latitude, point.parish.longitude], {
                icon: customMarkerIcon,
                participantCount: point.activeParticipantsCount
            }).bindPopup(popupContent);

            markers.addLayer(marker);
        });

        map.addLayer(markers);
    });
</script>
{% endblock %}
    </body>
</html>